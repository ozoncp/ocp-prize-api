syntax = "proto3";

import "google/api/annotations.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

package ocp.prize.api;

option go_package = "gihtub.com/ozoncp/ocp-prize-api/pkg/ocp-prize-api;ocp_prize_api";

// Description of prize

service OcpPrizeApi {

    // Return list of prize
    rpc ListPrizeV1(ListPrizeV1Request) returns (ListPrizeV1Response) {
        option (google.api.http) = {
            get: "/v1/prizes"
        };
    }

    // Return description of prize by id
    rpc DescribePrizeV1(DescribePrizeV1Request) returns (DescribePrizeV1Response) {
        option (google.api.http) = {
            get: "/v1/prizes/{prize_id}"
        };
    }

    // Сreate new prize
    rpc CreatePrizeV1(CreatePrizeV1Request) returns (CreatePrizeV1Response) {
        option (google.api.http) = {
            post: "/v1/prizes"
        };
    }

    // Сreate few new prizes
    rpc MultiCreatePrizeV1(MultiCreatePrizeV1Request) returns (MultiCreatePrizeV1Response) {
        option (google.api.http) = {
            post: "/v1/prizes"
        };
    }

    // Update prize
    rpc UpdatePrizeV1(UpdatePrizeV1Request) returns (UpdatePrizeV1Response) {
        option (google.api.http) = {
            post: "/v1/prizes"
        };
    }

    // Delete prize by id
    rpc RemovePrizeV1(RemovePrizeV1Request) returns (RemovePrizeV1Response) {
        option (google.api.http) = {
            delete: "/v1/prizes/{prize_id}"
        };
    }
}

message ListPrizeV1Request {
    uint64 limit = 1;
    uint64 offset = 2;
}

message ListPrizeV1Response {
    repeated Prize prizes = 1;
}

message CreatePrizeV1Request {
    string link = 1;
    uint64 issue_id = 2;
}

message CreatePrizeV1Response {
    uint64 prize_id = 1;
}

message MultiCreatePrizeV1Request {
    repeated Prize prizes = 1;
}

message MultiCreatePrizeV1Response {
    repeated uint64 prize_ids = 1;
}

message UpdatePrizeV1Request {
    uint64 id = 1;
    string link = 2;
    uint64 issue_id = 3;
}

message UpdatePrizeV1Response {
    bool succeed = 1;
}

message RemovePrizeV1Request {
	uint64 prize_id = 1 [(validate.rules).uint64.gt = 0];
}

message RemovePrizeV1Response {
    bool found = 1;
}

message DescribePrizeV1Request {
	uint64 prize_id = 1 [(validate.rules).uint64.gt = 0];
}

message DescribePrizeV1Response {
    Prize prize = 1;
}

// Prize description
message Prize {
    uint64 id = 1;
    uint64 issue_id = 2;
    string link = 3;
}